name: Backend CD

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        working-directory: ./
        run: chmod +x gradlew

      - name: Sign in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_ID }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: build image and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            NAMEZ=${{ secrets.VARIABLE }}
          tags: |
            ${{ secrets.DOCKER_HUB_REPO }}/test:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: peter
          key: ${{ secrets.SECRET_KEY }}
          script: |
            docker rm -f $(docker ps -qa)
            docker rmi ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
            docker pull ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
            docker-compose up -d

        aws-region: ap-northeast-2
#      - name: Add GitHub IP to AWS
#        run: |
#          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
#
#      - name: Deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          password: ${{ secrets.EC2_PASSWORD }}
#          port: ${{ secrets.EC2_SSH_PORT }}
#          timeout: 60s
#          script: |
#            cd street-drop-server/
#            sudo docker rm - f $(docker ps -qa)
#            sudo docker pull ${{ secrets.DOCKER_REPO }}/street-drop-api-server:latest
#            sudo docker stop $(sudo docker ps -aq)
#            sudo docker run -d ${{ secrets.DOCKER_REPO }}/street-drop-api-server:latest \
#              --name street-drop-api \
#              -p 8080:8080 street-drop-api \
#
#      - name: Remove IP FROM security group
#        run: |
#          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
